{"remainingRequest":"D:\\My Project\\web-19feb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My Project\\web-19feb\\src\\views\\AdminUser.vue?vue&type=style&index=0&id=235f0420&scoped=true&lang=css&","dependencies":[{"path":"D:\\My Project\\web-19feb\\src\\views\\AdminUser.vue","mtime":1539578851796},{"path":"D:\\My Project\\web-19feb\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\My Project\\web-19feb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\My Project\\web-19feb\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\My Project\\web-19feb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538498346230},{"path":"D:\\My Project\\web-19feb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.title {\n  color: white;\n  text-decoration: underline;\n}\n.v-model {\n  z-index: 0 !important;\n}\n",{"version":3,"sources":["AdminUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminUser.vue","sourceRoot":"src\\views","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <!-- cập nhật thông tin -->\n    <el-dialog style=\"z-index: 100000;\" title=\"Thay đổi thông tin tài khoản\" :visible.sync=\"dialogEdit\">\n      <el-form :model=\"userSelect\" v-loading=\"loadingEdit\">\n        <el-row>\n            <el-col :span=\"6\">\n              &nbsp;\n            </el-col>\n             <el-col :span=\"12\" style=\"text-align:center;\">\n               <img v-if=\"userSelect.urlImg\" :src=\"userSelect.urlImg\" style=\"width: 200px;height: 200px;\" alt=\"Thumbnail Image\" class=\"img-raised rounded-circle\">\n               <br><br>\n               <input style=\"display:none\" id=\"pic\" name=\"pic\" type=\"file\" class=\"form-control\" v-on:change=\"upload($event.target.files)\" accept=\"image/*\" />\n               <el-button type=\"primary\" @click=\"getFile\">Chọn</el-button>\n            </el-col>\n             <el-col :span=\"6\">\n              &nbsp;\n            </el-col>\n        </el-row>\n        <el-form-item label=\"Tên\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"userSelect.name\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Tag\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"userSelect.role\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button :loading=\"loadingEdit\" @click=\"dialogEdit = false\">Huỷ</el-button>\n        <el-button :loading=\"loadingEdit\" type=\"primary\" @click=\"onSavedItem\">Lưu</el-button>\n      </span>\n    </el-dialog>\n    <!-- reset mật khẩu -->\n    <el-dialog style=\"z-index: 100000;\" title=\"Cập nhật mật khẩu\" :visible.sync=\"dialogReset\">\n      <el-form :model=\"pwdUpdate\" v-loading=\"loadingReset\">\n        <el-input type=\"hidden\" v-model=\"pwdUpdate.uid\" autocomplete=\"off\"></el-input>\n        <el-form-item label=\"Pass mới\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"pwdUpdate.pwd\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Nhập lại\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"pwdUpdate.repwd\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button :loading=\"loadingReset\" @click=\"dialogReset = false\">Huỷ</el-button>\n        <el-button :loading=\"loadingReset\" type=\"primary\" @click=\"onReset\">Lưu</el-button>\n      </span>\n    </el-dialog>\n    <!-- phân quyền  -->\n    <el-dialog style=\"z-index: 100000;\" title=\"Phân quyền\" :visible.sync=\"dialogPermisson\">\n      <el-form :model=\"permissonUpdate\" v-loading=\"loadingPermisson\">\n        <el-input type=\"hidden\" v-model=\"permissonUpdate.uid\" autocomplete=\"off\"></el-input>\n        <el-checkbox-group v-model=\"permissonUpdate.listPage\">\n          <el-row>\n            <el-col :span=\"12\" v-for=\"item in listPage\" :key=\"item.screen\">\n                <el-checkbox :label=\"item.screen\" name=\"type\">{{item.name}}</el-checkbox>\n            </el-col>\n           \n          </el-row>\n        </el-checkbox-group>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button :loading=\"loadingPermisson\" @click=\"dialogPermisson = false\">Huỷ</el-button>\n        <el-button :loading=\"loadingPermisson\" type=\"primary\" @click=\"onSetPermisson\">Lưu</el-button>\n      </span>\n    </el-dialog>\n    <parallax class=\"section page-header header-filter\" :style=\"headerStyle\"></parallax>\n    <div class=\"main main-raised\">\n      <div class=\"section profile-content\">\n        <div class=\"container\">\n          <div class=\"md-layout\">\n            <div class=\"md-layout-item md-size-50 mx-auto\">\n              <div class=\"profile\">\n                <div class=\"name\">\n                  <h3 class=\"title\">QUẢN LÝ USER</h3>\n                 </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"profile-tabs\">\n              <el-table\n                :data=\"listUser\"\n                v-loading=\"loading\"\n                element-loading-text=\"Đang tải...\"\n                element-loading-spinner=\"el-icon-loading\"\n                style=\"width: 100%\">\n                <!-- <el-table-column\n                  fixed\n                  prop=\"id\"\n                  label=\"#\"\n                  width=\"150\">\n                </el-table-column> -->\n                <el-table-column\n                  prop=\"name\"\n                  label=\"Tên\"\n                  width=\"300\">\n                    <template slot-scope=\"scope\">\n                        <img :src=\"scope.row.urlImg\" style=\"width: 35px;height: 35px;\" alt=\"Thumbnail Image\" class=\"img-raised rounded-circle\">\n                        <span style=\"margin-left: 10px;\">{{scope.row.name}}</span>\n                    </template>\n                </el-table-column>\n                <el-table-column\n                  prop=\"point\"\n                  label=\"Điểm\"\n                  width=\"140\">\n                </el-table-column>\n                <el-table-column\n                  prop=\"role\"\n                  label=\"Quyền\"\n                  width=\"160\">\n                </el-table-column>\n                <el-table-column\n                  prop=\"usr\"\n                  label=\"Tên đăng nhập\"\n                  width=\"140\">\n                </el-table-column>\n                <el-table-column\n                  fixed=\"right\"\n                  label=\"Operations\"\n                  width=\"190\">\n                  <template slot-scope=\"scope\">                        \n                        <el-button \n                        size=\"mini\" \n                        type=\"primary\" \n                        icon=\"el-icon-edit\" \n                        @click=\"handleEdit(scope.$index, scope.row)\" circle></el-button>\n                        <el-button \n                        size=\"mini\" \n                        type=\"primary\" \n                        icon=\"el-icon-refresh\" \n                        @click=\"handleReset(scope.$index, scope.row)\" circle></el-button>\n                        <el-button \n                        size=\"mini\" \n                        type=\"primary\" \n                        icon=\"el-icon-more\"\n                        @click=\"handlePermisson(scope.$index, scope.row)\" circle></el-button> \n                    </template>\n                </el-table-column>\n              </el-table>\n              <br>\n              <br>\n              <br>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n.title {\n  color: white;\n  text-decoration: underline;\n}\n.v-model {\n  z-index: 0 !important;\n}\n</style>\n\n<script>\nimport { Modal } from \"@/components\";\n// import Loading from \"../layout/Loading.vue\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nexport default {\n  components: {\n    Modal\n  },\n  bodyClass: \"profile-page\",\n  data() {\n    return {\n      loading: false,\n      loadingEdit: false,\n      loadingReset: false,\n      loadingPermisson: false,\n      show: true,\n      listUser: [],\n      userSelect: {\n        id: \"\",\n        name: \"\",\n        point: 0,\n        role: \"\",\n        urlImg: \"\",\n        usr: \"\"\n      },\n      pwdUpdate: {\n        uid: \"\",\n        pwd: \"\",\n        repwd: \"\"\n      },\n      permissonUpdate: {\n        uid: \"\",\n        listPage: []\n      },\n      cloudinary: {\n        uploadPreset: \"f4w6spcm\",\n        apiKey: \"551749158563396\",\n        cloudName: \"dqibysfxu\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Authorization: \"brearer \" + localStorage.token\n        }\n      },\n      imageUrl: \"\",\n      listPage: [],\n      dialogEdit: false,\n      dialogReset: false,\n      dialogPermisson: false,\n      formLabelWidth: \"120px;\"\n    };\n  },\n  props: {\n    header: {\n      type: String,\n      default: require(\"@/assets/img/city-profile.jpg\")\n    },\n    img: {\n      type: String,\n      default: require(\"@/assets/img/faces/christian.jpg\")\n    }\n  },\n  computed: {\n    clUrl: function() {\n      return `https://api.cloudinary.com/v1_1/${\n        this.cloudinary.cloudName\n      }/upload`;\n    },\n    headerStyle() {\n      return {\n        backgroundImage: `url(${this.header})`\n      };\n    }\n  },\n  methods: {\n    getUser() {\n      this.loading = true;\n      var http = axios.create({\n        baseURL: this.baseApi + \"api/adminuser\",\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded\",\n          Authorization: \"brearer \" + localStorage.token\n        }\n      });\n      http\n        .post()\n        .then(res => {\n          this.listUser = res.data.data;\n          console.log(\"sucess\", res.data);\n          this.loading = false;\n        })\n        .catch(err => {\n          console.log(\"err\", err);\n          this.loading = false;\n        });\n    },\n    getFile() {\n      document.getElementById(\"pic\").click();\n    },\n    handleEdit(index, row) {\n      this.userSelect = row;\n      this.dialogEdit = true;\n      // console.log(index,'=>',row);\n    },\n    handleReset(index, row) {\n      this.pwdUpdate = {\n        uid: row.id,\n        pwd: \"\",\n        repwd: \"\"\n      };\n      this.dialogReset = true;\n    },\n    handlePermisson(index, row) {\n      this.dialogPermisson = true;\n      this.listPage = [];\n      this.permissonUpdate.listPage = [];\n      this.getPermissons(row.id);\n    },\n    onSavedItem() {\n      this.loadingEdit = true;\n      axios\n        .post(this.baseApi + \"api/adminuser/edit\", this.userSelect, {\n          headers: {\n            \"content-type\": \"application/json\",\n            Authorization: \"brearer \" + localStorage.token\n          }\n        })\n        .then(res => {\n          this.dialogEdit = false;\n          if (res.data.Result) {\n            swal({\n              title: \"Lưu thành công\",\n              type: \"success\",\n              showConfirmButton: false,\n              timer: 1000\n            }).then(() => {\n              this.loadingEdit = false;\n              this.getUser();\n            });\n          } else {\n            swal({\n              title: \"Lỗi \" + res.data.Code,\n              text: res.data.Msg,\n              type: \"error\",\n              showConfirmButton: false,\n              timer: 1000\n            }).then(() => {\n              this.loadingEdit = false;\n              this.getUser();\n            });\n          }\n        })\n        .catch(err => {\n          console.log(\"err\", err);\n          this.loadingEdit = false;\n        });\n    },\n    onReset() {\n      this.loadingReset = true;\n      axios\n        .post(this.baseApi + \"api/adminuser/resetPassword\", this.pwdUpdate, {\n          headers: {\n            \"content-type\": \"application/json\",\n            Authorization: \"brearer \" + localStorage.token\n          }\n        })\n        .then(res => {\n          this.dialogReset = false;\n          if (res.data.Result) {\n            swal({\n              title: \"Đổi thành công\",\n              type: \"success\",\n              showConfirmButton: false,\n              timer: 1000\n            }).then(() => {\n              this.loadingReset = false;\n            });\n          } else {\n            swal({\n              title: \"Lỗi \" + res.data.Code,\n              text: res.data.Msg,\n              type: \"error\",\n              showConfirmButton: false,\n              timer: 1000\n            }).then(() => {\n              this.loadingReset = false;\n            });\n          }\n        })\n        .catch(err => {\n          console.log(\"err\", err);\n          this.loadingReset = false;\n        });\n    },\n    onSetPermisson() {\n      this.loadingPermisson = true;\n      var listPage = [];\n      this.permissonUpdate.listPage.forEach(el => {\n        var d = this.listPage.filter(v => v.screen == el)[0];\n        listPage.push(d);\n      });\n      var submitModel = {\n        userid: this.permissonUpdate.uid,\n        listPage: listPage\n      };\n      axios\n        .post(this.baseApi + \"api/adminuser/setPermisson\", submitModel, {\n          headers: {\n            \"content-type\": \"application/json\",\n            Authorization: \"brearer \" + localStorage.token\n          }\n        })\n        .then(res => {\n          this.dialogPermisson = false;\n          if (res.data.Result) {\n            swal({\n              title: \"Lưu thành công\",\n              type: \"success\",\n              showConfirmButton: false,\n              timer: 1000\n            });\n          } else {\n            swal({\n              title: \"Lỗi \" + res.data.Code,\n              text: res.data.Msg,\n              type: \"error\",\n              showConfirmButton: false,\n              timer: 1000\n            });\n          }\n          this.loadingPermisson = false;\n        })\n        .catch(err => {\n          this.loadingPermisson = false;\n        });\n    },\n    getPermissons(uid) {\n      this.loadingPermisson = true;\n      // var http = axios.create({\n      //   baseURL: this.baseApi + \"api/adminuser/getPage\",\n      //   headers: {\n      //     \"content-type\": \"application/x-www-form-urlencoded\",\n      //     Authorization: \"brearer \" + localStorage.token\n      //   }\n      // });\n      axios\n        .post(\n          this.baseApi + \"api/adminuser/getPage\",\n          { id: uid },\n          {\n            headers: {\n              \"content-type\": \"application/json\",\n              Authorization: \"brearer \" + localStorage.token\n            }\n          }\n        )\n        .then(res => {\n          this.listPage = res.data.data;\n          this.permissonUpdate.uid = uid;\n          this.permissonUpdate.listPage = [];\n          res.data.data_user.forEach(el => {\n            this.permissonUpdate.listPage.push(el.screen);\n          });\n          this.loadingPermisson = false;\n        })\n        .catch(err => {\n          console.log(\"err\", err);\n          this.loadingPermisson = false;\n        });\n    },\n    handleAvatarSuccess(res, file) {\n      console.log(res);\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === \"image/jpeg\";\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error(\"Avatar picture must be JPG format!\");\n      }\n      if (!isLt2M) {\n        this.$message.error(\"Avatar picture size can not exceed 2MB!\");\n      }\n      return isJPG && isLt2M;\n    },\n    upload(file) {\n      this.loadingEdit = true;\n      const formData = new FormData();\n      formData.append(\"file\", file[0]);\n      formData.append(\"upload_preset\", this.cloudinary.uploadPreset);\n      formData.append(\"tags\", \"gs-vue,gs-vue-uploaded\");\n      for (var pair of formData.entries()) {\n        console.log(pair[0] + \", \" + pair[1]);\n      }\n      axios.post(this.clUrl, formData).then(res => {\n        this.userSelect.urlImg = res.data.secure_url;\n        this.loadingEdit = false;\n      });\n    }\n  },\n  mounted() {\n    this.getUser();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.section {\n  padding: 0;\n}\n\n.profile-tabs /deep/ {\n  .md-card-tabs .md-list {\n    justify-content: center;\n  }\n\n  [class*=\"tab-pane-\"] {\n    margin-top: 3.213rem;\n    padding-bottom: 50px;\n\n    img {\n      margin-bottom: 2.142rem;\n    }\n  }\n}\n</style>\n"]}]}