{"remainingRequest":"D:\\My Project\\web-19feb\\node_modules\\babel-loader\\lib\\index.js!D:\\My Project\\web-19feb\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\My Project\\web-19feb\\src\\views\\tools-policy-genarate\\until.js","dependencies":[{"path":"D:\\My Project\\web-19feb\\src\\views\\tools-policy-genarate\\until.js","mtime":1539922298258},{"path":"D:\\My Project\\web-19feb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538498346230},{"path":"D:\\My Project\\web-19feb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\My Project\\web-19feb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*  Copyright 2017 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License. */\nfunction convertHtmlToMd(html) {\n  var markdown = toMarkdown(html, {\n    converters: [{\n      filter: 'div',\n      replacement: function replacement(content) {\n        return content;\n      }\n    }]\n  });\n  return markdown;\n}\n\nfunction getRawHTML(content, title) {\n  var html = \"<!DOCTYPE html>\\n\\\r\n          <html>\\n\\\r\n          <head>\\n\\\r\n            <meta charset='utf-8'>\\n\\\r\n            <meta name='viewport' content='width=device-width'>\\n\\\r\n            <title>\" + title + \"</title>\\n\\\r\n            <style> body { font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; padding:1em; } </style>\\n\\\r\n          </head>\\n\\\r\n          <body>\\n\\\r\n          \" + content + '\\n\\\r\n          </body>\\n\\\r\n          </html>\\n\\\r\n            ';\n  return html;\n}\n\nfunction getContent(id) {\n  var content = document.getElementById(id);\n  return content.innerHTML;\n}\n\nfunction getTitle(id) {\n  var content = document.getElementById(id);\n  var title = content.getElementsByTagName('h2')[0];\n  return title.innerHTML;\n}\n\nfunction selectText(containerId) {\n  var range;\n\n  if (document.selection) {\n    range = document.body.createTextRange();\n    range.moveToElementText(document.getElementById(containerId));\n    range.select();\n  } else if (window.getSelection) {\n    range = document.createRange();\n    range.selectNode(document.getElementById(containerId));\n    window.getSelection().addRange(range);\n  }\n}\n\nfunction download(filename, text, format) {\n  format += ';charset=utf-8,';\n  var pom = document.createElement('a');\n  pom.setAttribute('href', format + encodeURIComponent(text));\n  pom.setAttribute('download', filename);\n\n  if (document.createEvent) {\n    var event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    pom.dispatchEvent(event);\n  } else {\n    pom.click();\n  }\n}\n\nfunction downloadHTML(filename, content) {\n  filename += '.html';\n  download(filename, content, 'data:text/html');\n}\n\nfunction downloadMD(filename, content) {\n  filename += '.md';\n  download(filename, content, 'data:text/markdown');\n}",{"version":3,"sources":["D:\\My Project\\web-19feb\\src\\views\\tools-policy-genarate\\until.js"],"names":["convertHtmlToMd","html","markdown","toMarkdown","converters","filter","replacement","content","getRawHTML","title","getContent","id","document","getElementById","innerHTML","getTitle","getElementsByTagName","selectText","containerId","range","selection","body","createTextRange","moveToElementText","select","window","getSelection","createRange","selectNode","addRange","download","filename","text","format","pom","createElement","setAttribute","encodeURIComponent","createEvent","event","initEvent","dispatchEvent","click","downloadHTML","downloadMD"],"mappings":"AAAA;;;;;;;;;;;;;AAcI,SAASA,eAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAIC,WAAWC,WAAWF,IAAX,EAAiB;AAC9BG,gBAAY,CACV;AACEC,cAAQ,KADV;AAEEC,mBAAa,qBAAUC,OAAV,EAAmB;AAC9B,eAAOA,OAAP;AACD;AAJH,KADU;AADkB,GAAjB,CAAf;AAUA,SAAOL,QAAP;AACD;;AAED,SAASM,UAAT,CAAqBD,OAArB,EAA8BE,KAA9B,EAAqC;AACnC,MAAIR,OACF;;;;;oBAAA,GAMAQ,KANA,GAOA;;;;WAPA,GAYAF,OAZA,GAaA;;;aAdF;AAkBA,SAAON,IAAP;AACD;;AAED,SAASS,UAAT,CAAqBC,EAArB,EAAyB;AACvB,MAAIJ,UAAUK,SAASC,cAAT,CAAwBF,EAAxB,CAAd;AACA,SAAOJ,QAAQO,SAAf;AACD;;AAED,SAASC,QAAT,CAAmBJ,EAAnB,EAAuB;AACrB,MAAIJ,UAAUK,SAASC,cAAT,CAAwBF,EAAxB,CAAd;AACA,MAAIF,QAAQF,QAAQS,oBAAR,CAA6B,IAA7B,EAAmC,CAAnC,CAAZ;AACA,SAAOP,MAAMK,SAAb;AACD;;AAED,SAASG,UAAT,CAAqBC,WAArB,EAAkC;AAChC,MAAIC,KAAJ;;AACA,MAAIP,SAASQ,SAAb,EAAwB;AACtBD,YAAQP,SAASS,IAAT,CAAcC,eAAd,EAAR;AACAH,UAAMI,iBAAN,CAAwBX,SAASC,cAAT,CAAwBK,WAAxB,CAAxB;AACAC,UAAMK,MAAN;AACD,GAJD,MAIO,IAAIC,OAAOC,YAAX,EAAyB;AAC9BP,YAAQP,SAASe,WAAT,EAAR;AACAR,UAAMS,UAAN,CAAiBhB,SAASC,cAAT,CAAwBK,WAAxB,CAAjB;AACAO,WAAOC,YAAP,GAAsBG,QAAtB,CAA+BV,KAA/B;AACD;AACF;;AAED,SAASW,QAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;AACzCA,YAAU,iBAAV;AACA,MAAIC,MAAMtB,SAASuB,aAAT,CAAuB,GAAvB,CAAV;AACAD,MAAIE,YAAJ,CAAiB,MAAjB,EAAyBH,SAASI,mBAAmBL,IAAnB,CAAlC;AACAE,MAAIE,YAAJ,CAAiB,UAAjB,EAA6BL,QAA7B;;AAEA,MAAInB,SAAS0B,WAAb,EAA0B;AACxB,QAAIC,QAAQ3B,SAAS0B,WAAT,CAAqB,aAArB,CAAZ;AACAC,UAAMC,SAAN,CAAgB,OAAhB,EAAyB,IAAzB,EAA+B,IAA/B;AACAN,QAAIO,aAAJ,CAAkBF,KAAlB;AACD,GAJD,MAIO;AACLL,QAAIQ,KAAJ;AACD;AACF;;AAED,SAASC,YAAT,CAAuBZ,QAAvB,EAAiCxB,OAAjC,EAA0C;AACxCwB,cAAY,OAAZ;AACAD,WAASC,QAAT,EAAmBxB,OAAnB,EAA4B,gBAA5B;AACD;;AAED,SAASqC,UAAT,CAAqBb,QAArB,EAA+BxB,OAA/B,EAAwC;AACtCwB,cAAY,KAAZ;AACAD,WAASC,QAAT,EAAmBxB,OAAnB,EAA4B,oBAA5B;AACD","sourcesContent":["/*  Copyright 2017 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License. */\r\n\r\n    function convertHtmlToMd (html) {\r\n        let markdown = toMarkdown(html, {\r\n          converters: [\r\n            {\r\n              filter: 'div',\r\n              replacement: function (content) {\r\n                return content\r\n              }\r\n            }\r\n          ]\r\n        })\r\n        return markdown\r\n      }\r\n      \r\n      function getRawHTML (content, title) {\r\n        let html =\r\n          \"<!DOCTYPE html>\\n\\\r\n          <html>\\n\\\r\n          <head>\\n\\\r\n            <meta charset='utf-8'>\\n\\\r\n            <meta name='viewport' content='width=device-width'>\\n\\\r\n            <title>\" +\r\n          title +\r\n          \"</title>\\n\\\r\n            <style> body { font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; padding:1em; } </style>\\n\\\r\n          </head>\\n\\\r\n          <body>\\n\\\r\n          \" +\r\n          content +\r\n          '\\n\\\r\n          </body>\\n\\\r\n          </html>\\n\\\r\n            '\r\n        return html\r\n      }\r\n      \r\n      function getContent (id) {\r\n        var content = document.getElementById(id)\r\n        return content.innerHTML\r\n      }\r\n      \r\n      function getTitle (id) {\r\n        var content = document.getElementById(id)\r\n        var title = content.getElementsByTagName('h2')[0]\r\n        return title.innerHTML\r\n      }\r\n      \r\n      function selectText (containerId) {\r\n        var range\r\n        if (document.selection) {\r\n          range = document.body.createTextRange()\r\n          range.moveToElementText(document.getElementById(containerId))\r\n          range.select()\r\n        } else if (window.getSelection) {\r\n          range = document.createRange()\r\n          range.selectNode(document.getElementById(containerId))\r\n          window.getSelection().addRange(range)\r\n        }\r\n      }\r\n      \r\n      function download (filename, text, format) {\r\n        format += ';charset=utf-8,'\r\n        var pom = document.createElement('a')\r\n        pom.setAttribute('href', format + encodeURIComponent(text))\r\n        pom.setAttribute('download', filename)\r\n      \r\n        if (document.createEvent) {\r\n          var event = document.createEvent('MouseEvents')\r\n          event.initEvent('click', true, true)\r\n          pom.dispatchEvent(event)\r\n        } else {\r\n          pom.click()\r\n        }\r\n      }\r\n      \r\n      function downloadHTML (filename, content) {\r\n        filename += '.html'\r\n        download(filename, content, 'data:text/html')\r\n      }\r\n      \r\n      function downloadMD (filename, content) {\r\n        filename += '.md'\r\n        download(filename, content, 'data:text/markdown')\r\n      }\r\n      "]}]}